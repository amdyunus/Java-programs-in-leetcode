class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode mid=middleNode(head);
        ListNode Secondhead=reverselist(mid);
        ListNode reversehead=Secondhead;
        while(head!=null&&Secondhead!=null){
            if(head.val!=Secondhead.val){
                break;
            }
            head=head.next;
            Secondhead=Secondhead.next;
        }
        reverselist(reversehead);
        return head==null || Secondhead==null;
    }

    ListNode middleNode(ListNode head){
        ListNode s=head;
        ListNode f=head;
        while(f!=null && f.next!=null){
            s=s.next;
            f=f.next.next;
        }
        return s;
    }

    ListNode reverselist(ListNode head){
        if(head==null){
            return head;
        }
        ListNode prev=null;
        ListNode present=head;
        ListNode next=present.next;
        while(present!=null){
            present.next=prev;
            prev=present;
            present=next;
            if(next!=null){
                next=next.next;
            }
        }
        return prev;
    }
}
