class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null)
      return head;
        
    
    ListNode prev = null, slow = head, fast = head;
    
    while (fast != null && fast.next != null) {
      prev = slow;
      slow = slow.next;
      fast = fast.next.next;
    }
    
    prev.next = null;

      
      ListNode left=sortList(head);
      ListNode right=sortList(slow);

      return merge(left,right);
    }

    ListNode merge(ListNode list1, ListNode list2) {
        ListNode Dummyhead=new ListNode();
        ListNode tail=Dummyhead;
       
        while(list1!=null && list2!=null) {
             if(list1.val<list2.val){
                 tail.next=list1;
                 list1=list1.next;
                 tail=tail.next;
             }else{
                 tail.next=list2;
                 list2=list2.next;
                 tail=tail.next;
             }
        } 
        tail.next=(list1!=null)?list1:list2;
        return Dummyhead.next;    
    }
   

}
